apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: {{ include "helm.fullname" . }}-daemonset
  labels:
    {{- include "helm.labels" . | nindent 4 }}
spec:
  selector:
    matchLabels:
      {{- include "helm.selectorLabels" . | nindent 6 }}-daemonset
  template:
    metadata:
      labels:
        {{- include "helm.selectorLabels" . | nindent 8 }}-daemonset
    spec:
      securityContext:
        {{- toYaml .Values.daemonset.podSecurityContext | nindent 8 }}
      hostNetwork: true
      containers:
        - name: fsx-plugin
          securityContext:
            {{- toYaml .Values.daemonset.fsxPlugin.securityContext | nindent 12 }}
          image: "{{ .Values.daemonset.fsxPlugin.image.repository }}:{{ .Values.daemonset.fsxPlugin.image.tag }}"
          imagePullPolicy: {{ .Values.daemonset.fsxPlugin.image.pullPolicy }}
          args:
            - --endpoint=$(CSI_ENDPOINT)
            {{- toYaml .Values.daemonset.fsxPlugin.extraArgs | nindent 12 }}
          env:
            - name: CSI_ENDPOINT
              value: unix:/csi/csi.sock
          volumeMounts:
            - name: kubelet-dir
              mountPath: /var/lib/kubelet
              mountPropagation: "Bidirectional"
            - name: plugin-dir
              mountPath: /csi
          ports:
            - containerPort: 9810
              name: healthz
              protocol: TCP
          livenessProbe:
            failureThreshold: 5
            httpGet:
              path: /healthz
              port: healthz
            initialDelaySeconds: 10
            timeoutSeconds: 3
            periodSeconds: 2
        - name: csi-driver-registrar
          image: "{{ .Values.daemonset.csiDriverRegistrar.image.repository }}:{{ .Values.daemonset.csiDriverRegistrar.image.tag }}"
          imagePullPolicy: {{ .Values.daemonset.csiDriverRegistrar.image.pullPolicy }}
          args:
            - --csi-address=$(ADDRESS)
            - --kubelet-registration-path=$(DRIVER_REG_SOCK_PATH)
            {{- toYaml .Values.daemonset.csiDriverRegistrar.extraArgs | nindent 12 }}
          env:
            - name: ADDRESS
              value: /csi/csi.sock
            - name: DRIVER_REG_SOCK_PATH
              value: /var/lib/kubelet/plugins/fsx.csi.aws.com/csi.sock
            - name: KUBE_NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
          volumeMounts:
            - name: plugin-dir
              mountPath: /csi
            - name: registration-dir
              mountPath: /registration
        - name: liveness-probe
          imagePullPolicy: {{ .Values.daemonset.livenessProbe.image.pullPolicy }}
          image: "{{ .Values.daemonset.livenessProbe.image.repository }}:{{ .Values.daemonset.livenessProbe.image.tag }}"
          args:
            - --csi-address=/csi/csi.sock
            - --health-port=9810
          volumeMounts:
            - mountPath: /csi
              name: plugin-dir
      volumes:
        - name: kubelet-dir
          hostPath:
            path: /var/lib/kubelet
            type: Directory
        - name: registration-dir
          hostPath:
            path: /var/lib/kubelet/plugins_registry/
            type: Directory
        - name: plugin-dir
          hostPath:
            path: /var/lib/kubelet/plugins/fsx.csi.aws.com/
            type: DirectoryOrCreate
      {{- with .Values.daemonset.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
